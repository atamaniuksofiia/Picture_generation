import{S as q,i as l}from"./assets/vendor-5ObWk2rO.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const t of r)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function i(r){const t={};return r.integrity&&(t.integrity=r.integrity),r.referrerPolicy&&(t.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?t.credentials="include":r.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function s(r){if(r.ep)return;r.ep=!0;const t=i(r);fetch(r.href,t)}})();const w="https://pixabay.com/api/",S="46237249-998f0f24dffb15788a2eb0e4e";async function u(a,e){const i=await fetch(`${w}?key=${S}&q=${encodeURIComponent(a)}&image_type=photo&orientation=horizontal&safesearch=true&page=${e}&per_page=15`);if(!i.ok)throw new Error("Failed to fetch images");const s=await i.json();return{images:Array.isArray(s.hits)?s.hits:[],totalHits:s.totalHits}}function f(a){const e=a.map(({webformatURL:s,largeImageURL:r,tags:t,likes:n,views:h,comments:p,downloads:L})=>`
                <li class="gallery-item">
                    <a href="${r}" class="gallery-link">
                        <img src="${s}" alt="${t}" class="gallery-image" />
                    </a>
                    <div class="info">
                        <p class="info-item"><span>Likes:</span> ${n}</p>
                        <p class="info-item"><span>Views:</span> ${h}</p>
                        <p class="info-item"><span>Comments:</span> ${p}</p>
                        <p class="info-item"><span>Downloads:</span> ${L}</p>
                    </div>
                </li>
            `).join("");document.querySelector(".gallery").insertAdjacentHTML("beforeend",e)}const b=document.querySelector(".search-form"),v=document.querySelector(".gallery"),o=document.querySelector(".js-btn-load"),m=document.querySelector(".loader");let d="",c=1,g=0;const y=new q(".gallery a");o.classList.add("is-hidden");b.addEventListener("submit",async a=>{if(a.preventDefault(),d=document.querySelector('input[name="query"]').value.trim(),!d){l.error({title:"Error",message:"Search query cannot be empty."});return}v.innerHTML="",c=1,o.classList.add("is-hidden"),m.classList.remove("is-hidden");try{const{images:e,totalHits:i}=await u(d,c);g=i,e.length===0?l.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}):(f(e),y.refresh(),o.classList.remove("is-hidden"))}catch(e){console.error(e),l.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{m.classList.add("is-hidden")}});o.addEventListener("click",async()=>{var a;c+=1,m.classList.remove("is-hidden");try{const{images:e,totalHits:i}=await u(d,c);if(e.length===0){l.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}),o.classList.add("is-hidden");return}else f(e),y.refresh(),(e.length<15||c*15>=g)&&o.classList.add("is-hidden");const s=((a=document.querySelector(".gallery-item"))==null?void 0:a.getBoundingClientRect().height)||0;window.scrollBy({top:s*2,behavior:"smooth"})}catch{l.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{m.classList.add("is-hidden")}});
//# sourceMappingURL=index.js.map
