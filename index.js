import{a as L,i,S as w}from"./assets/vendor-u8rapaCG.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function a(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(e){if(e.ep)return;e.ep=!0;const t=a(e);fetch(e.href,t)}})();const S="https://pixabay.com/api/",q="46237249-998f0f24dffb15788a2eb0e4e";async function u(s,r=1){const a=new URLSearchParams({key:q,q:s,image_type:"photo",orientation:"horizontal",safesearch:"true",page:r,per_page:15}),o=`${S}?${a}`;try{const e=await L.get(o);if(e.status!==200)throw new Error("Network response was not ok");return e.data.hits}catch{return i.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}),[]}}function g(s){const r=s.map(({webformatURL:o,largeImageURL:e,tags:t,likes:n,views:f,comments:p,downloads:h})=>`
                <li class="gallery-item">
                    <a href="${e}" class="gallery-link">
                        <img src="${o}" alt="${t}" class="gallery-image" />
                    </a>
                    <div class="info">
                        <p class="info-item"><span>Likes:</span> ${n}</p>
                        <p class="info-item"><span>Views:</span> ${f}</p>
                        <p class="info-item"><span>Comments:</span> ${p}</p>
                        <p class="info-item"><span>Downloads:</span> ${h}</p>
                    </div>
                </li>
            `).join("");document.querySelector(".gallery").insertAdjacentHTML("beforeend",r)}const b=document.querySelector(".search-form"),E=document.querySelector(".gallery"),l=document.querySelector(".js-btn-load"),m=document.querySelector(".loader");let c="",d=1;const y=new w(".gallery a");l.classList.add("is-hidden");b.addEventListener("submit",async s=>{if(s.preventDefault(),c=document.querySelector('input[name="query"]').value.trim(),!c){i.error({title:"Error",message:"Search query cannot be empty."});return}E.innerHTML="",d=1,l.classList.add("is-hidden"),m.classList.remove("is-hidden");try{const r=await u(c,d);r.length===0?i.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}):(g(r),y.refresh(),l.classList.remove("is-hidden"))}catch(r){console.error(r),i.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{m.classList.add("is-hidden")}});l.addEventListener("click",async()=>{var s;d+=1;try{const r=await u(c,d);r.length===0?i.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}):(g(r),y.refresh());const a=((s=document.querySelector(".gallery-item"))==null?void 0:s.getBoundingClientRect().height)||0;window.scrollBy({top:a*2,behavior:"smooth"})}catch(r){console.error(r),i.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{m.classList.add("is-hidden")}});
//# sourceMappingURL=index.js.map
