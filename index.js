import{S as L,i as l}from"./assets/vendor-5ObWk2rO.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function a(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(e){if(e.ep)return;e.ep=!0;const t=a(e);fetch(e.href,t)}})();const q="https://pixabay.com/api/",w="46237249-998f0f24dffb15788a2eb0e4e";async function u(s,r){const a=await fetch(`${q}?key=${w}&q=${encodeURIComponent(s)}&image_type=photo&orientation=horizontal&safesearch=true&page=${r}&per_page=15`);if(!a.ok)throw new Error("Failed to fetch images");const i=await a.json();return Array.isArray(i.hits)?i.hits:[]}function f(s){const r=s.map(({webformatURL:i,largeImageURL:e,tags:t,likes:n,views:g,comments:h,downloads:p})=>`
                <li class="gallery-item">
                    <a href="${e}" class="gallery-link">
                        <img src="${i}" alt="${t}" class="gallery-image" />
                    </a>
                    <div class="info">
                        <p class="info-item"><span>Likes:</span> ${n}</p>
                        <p class="info-item"><span>Views:</span> ${g}</p>
                        <p class="info-item"><span>Comments:</span> ${h}</p>
                        <p class="info-item"><span>Downloads:</span> ${p}</p>
                    </div>
                </li>
            `).join("");document.querySelector(".gallery").insertAdjacentHTML("beforeend",r)}const S=document.querySelector(".search-form"),b=document.querySelector(".gallery"),o=document.querySelector(".js-btn-load"),m=document.querySelector(".loader");let d="",c=1,v=0;const y=new L(".gallery a");o.classList.add("is-hidden");S.addEventListener("submit",async s=>{if(s.preventDefault(),d=document.querySelector('input[name="query"]').value.trim(),!d){l.error({title:"Error",message:"Search query cannot be empty."});return}b.innerHTML="",c=1,o.classList.add("is-hidden"),m.classList.remove("is-hidden");try{const r=await u(d,c);r.length===0?l.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}):(f(r),y.refresh(),o.classList.remove("is-hidden"))}catch(r){console.error(r),l.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{m.classList.add("is-hidden")}});o.addEventListener("click",async()=>{var s;c+=1,m.classList.remove("is-hidden");try{const r=await u(d,c),a=Array.isArray(r.hits)?r.hits:[];if(a.length===0){l.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}),o.classList.add("is-hidden");return}else f(a),y.refresh(),(a.length<15||c*15>=v)&&o.classList.add("is-hidden");const i=((s=document.querySelector(".gallery-item"))==null?void 0:s.getBoundingClientRect().height)||0;window.scrollBy({top:i*2,behavior:"smooth"})}catch{l.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{m.classList.add("is-hidden")}});
//# sourceMappingURL=index.js.map
