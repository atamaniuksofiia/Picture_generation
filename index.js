import{S as L,i as n}from"./assets/vendor-5ObWk2rO.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))a(r);new MutationObserver(r=>{for(const t of r)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function o(r){const t={};return r.integrity&&(t.integrity=r.integrity),r.referrerPolicy&&(t.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?t.credentials="include":r.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(r){if(r.ep)return;r.ep=!0;const t=o(r);fetch(r.href,t)}})();const q="https://pixabay.com/api/",w="46237249-998f0f24dffb15788a2eb0e4e";async function u(s,e){const o=await fetch(`${q}?key=${w}&q=${encodeURIComponent(s)}&image_type=photo&orientation=horizontal&safesearch=true&page=${e}&per_page=15`);if(!o.ok)throw new Error("Failed to fetch images");return(await o.json()).hits}function f(s){const e=s.map(({webformatURL:a,largeImageURL:r,tags:t,likes:i,views:y,comments:p,downloads:h})=>`
                <li class="gallery-item">
                    <a href="${r}" class="gallery-link">
                        <img src="${a}" alt="${t}" class="gallery-image" />
                    </a>
                    <div class="info">
                        <p class="info-item"><span>Likes:</span> ${i}</p>
                        <p class="info-item"><span>Views:</span> ${y}</p>
                        <p class="info-item"><span>Comments:</span> ${p}</p>
                        <p class="info-item"><span>Downloads:</span> ${h}</p>
                    </div>
                </li>
            `).join("");document.querySelector(".gallery").insertAdjacentHTML("beforeend",e)}const S=document.querySelector(".search-form"),b=document.querySelector(".gallery"),l=document.querySelector(".js-btn-load"),d=document.querySelector(".loader");let c="",m=1;const g=new L(".gallery a");l.classList.add("is-hidden");S.addEventListener("submit",async s=>{if(s.preventDefault(),c=document.querySelector('input[name="query"]').value.trim(),!c){n.error({title:"Error",message:"Search query cannot be empty."});return}b.innerHTML="",m=1,l.classList.add("is-hidden"),d.classList.remove("is-hidden");try{const e=await u(c,m);e.length===0?n.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}):(f(e),g.refresh(),l.classList.remove("is-hidden"))}catch(e){console.error(e),n.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{d.classList.add("is-hidden")}});l.addEventListener("click",async()=>{var s;m+=1,d.classList.remove("is-hidden");try{const e=await u(c,m);if(e.length===0){n.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}),l.classList.add("is-hidden");return}else f(e),g.refresh();const o=((s=document.querySelector(".gallery-item"))==null?void 0:s.getBoundingClientRect().height)||0;window.scrollBy({top:o*2,behavior:"smooth"})}catch(e){console.error(e),n.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{d.classList.add("is-hidden")}});
//# sourceMappingURL=index.js.map
